{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"_artifactsLocation": {
			"type": "string",
			"metadata": {
				"description": "Base URL for Template FIles",
				"artifactsBaseUrl": ""
			},
			"defaultValue": "https://raw.githubusercontent.com/haroldwongms/openshift-enterprise/master"
		},
		"masterVmSize": {
			"type": "string",
			"defaultValue": "Standard_DS2_v2",
			"allowedValues": [
				"Standard_A4", "Standard_A5", "Standard_A6", "Standard_A7", "Standard_A8", "Standard_A9", "Standard_A10", "Standard_A11",
				"Standard_D2", "Standard_D3", "Standard_D4",
				"Standard_D11", "Standard_D12", "Standard_D13", "Standard_D14",
				"Standard_D2_v2", "Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2",
				"Standard_D11_v2", "Standard_D12_v2", "Standard_D13_v2", "Standard_D14_v2",
				"Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5",
				"Standard_DS2", "Standard_DS3", "Standard_DS4",
				"Standard_DS11", "Standard_DS12", "Standard_DS13", "Standard_DS14",
				"Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
				"Standard_DS11_v2", "Standard_DS12_v2", "Standard_DS13_v2", "Standard_DS14_v2",
				"Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5"
			],
			"metadata": {
				"description": "OpenShift Master VM size"
			}
		},
		"nodeVmSize": {
			"type": "string",
			"defaultValue": "Standard_DS2_v2",
			"allowedValues": [
				"Standard_A4", "Standard_A5", "Standard_A6", "Standard_A7", "Standard_A8", "Standard_A9", "Standard_A10", "Standard_A11",
				"Standard_D2", "Standard_D3", "Standard_D4",
				"Standard_D11", "Standard_D12", "Standard_D13", "Standard_D14",
				"Standard_D2_v2", "Standard_D3_v2", "Standard_D4_v2", "Standard_D5_v2",
				"Standard_D11_v2", "Standard_D12_v2", "Standard_D13_v2", "Standard_D14_v2",
				"Standard_G1", "Standard_G2", "Standard_G3", "Standard_G4", "Standard_G5",
				"Standard_DS2", "Standard_DS3", "Standard_DS4",
				"Standard_DS11", "Standard_DS12", "Standard_DS13", "Standard_DS14",
				"Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
				"Standard_DS11_v2", "Standard_DS12_v2", "Standard_DS13_v2", "Standard_DS14_v2",
				"Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5"
			],
			"metadata": {
				"description": "OpenShift Node VM(s) size"
			}
		},
		"openshiftClusterPrefix": {
			"type": "string",
			"minLength": 1,
			"maxLength": 5,
			"metadata": {
				"description": "OpenShift cluster prefix.  Used to generate master, infra and node hostnames.  Maximum of 5 characters."
			}
		},
		"openshiftMasterPublicIpDnsLabel": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "OpenShift Master VM public IP DNS name. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
			}
		},
		"nodeLbPublicIpDnsLabel": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "OpenShift Nodes Load Balancer public IP DNS name. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
			}
		},
		"nodeInstanceCount": {
			"type": "int",
			"minValue": 1,
			"allowedValues": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
			"metadata": {
				"description": "Number of OpenShift nodes"
			}
		},
		"dataDiskSize": {
			"type": "int",
			"minValue": 1,
			"allowedValues": [1, 5, 10, 25, 50, 75, 100, 128, 256, 512, 768, 1023],
			"metadata": {
				"description": "Size of Datadisk in GB"
			}
		},
		"adminUsername": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Administrator username on all VMs and first OpenShift Username"
			}
		},
		"openshiftPassword": {
			"type": "securestring",
			"minLength": 1,
			"metadata": {
				"description": "Password for login for OpenShift Console"
			}
		},
		"cloudAccessUsername": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Cloud Access Username"
			}
		},
		"cloudAccessPassword": {
			"type": "securestring",
			"minLength": 1,
			"metadata": {
				"description": "Cloud Access password"
			}
		},
		"cloudAccessPoolId": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Pool ID with RHEL and OpenShift entitlements"
			}
		},
		"sshPublicKey": {
			"type": "securestring",
			"metadata": {
				"description": "SSH public key on all VMs"
			}
		},
		"subscriptionId": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Azure Subscription ID"
			}
		},
		"keyVaultResourceGroup": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Resource Group that contains the Key Vault"
			}
		},
		"keyVaultName": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Name of the Key Vault"
			}
		},
		"keyVaultSecret": {
			"type": "securestring",
			"minLength": 1,
			"metadata": {
				"description": "Key Vault Secret Name that contains the Private Key"
			}
		},
		"defaultSubDomainType": {
			"type": "string",
			"defaultValue": "xipio",
			"allowedValues": [
				"xipio", "custom"
			],
			"metadata": {
				"description": "Default Subdomain type - xip.io or custom (defined in next parameter)"
			}
		},
		"defaultSubDomain": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Default Subdomain for application routing (Wildcard DNS)"
			}
		}
	},
	"variables": {
		"location": "[resourceGroup().location]",
		"apiVersionCompute": "2015-06-15",
		"apiVersionNetwork": "2015-06-15",
		"apiVersionStorage": "2015-06-15",
		"apiVersionLinkTemplate": "2015-01-01",
		"namingInfix": "[toLower(parameters('openshiftClusterPrefix'))]",
		"openshiftMasterHostname": "[concat(variables('namingInfix'), 'master')]",
		"openshiftNodeHostname": "[concat(variables('namingInfix'), 'node')]",
		"openshiftInfraHostname": "[concat(variables('namingInfix'), 'infra')]",
		"newStorageAccountMaster": "[concat(uniqueString(concat(resourceGroup().id, 'msa', '0')), 'msa')]",
		"newStorageAccountNode": "[concat(uniqueString(concat(resourceGroup().id, 'nsa', '1')), 'nsa')]",
		"addressPrefix": "192.168.0.0/16",
		"masterSubnetPrefix": "192.168.1.0/24",
		"nodeSubnetPrefix": "192.168.2.0/24",
		"virtualNetworkName": "openshiftvnet",
		"masterSubnetName": "mastersubnet",
		"nodeSubnetName": "[concat(variables('openshiftNodeHostname'), 'subnet')]",
		"nodeLoadBalancerName": "[concat(variables('openshiftNodeHostname'), 'lb')]",
		"nodePublicIpAddressId": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('nodeLbPublicIpDnsLabel'))]",
		"nodeLbId": "[resourceId('Microsoft.Network/loadBalancers', variables('nodeLoadBalancerName'))]",
		"lbFrontEndConfigId": "[concat(variables('nodeLbId'), '/frontendIPConfigurations/loadBalancerFrontEnd')]",
		"lbBackendPoolId": "[concat(variables('nodeLbId'),'/backendAddressPools/loadBalancerBackend')]",
		"lbHttpProbeId": "[concat(variables('nodeLbId'),'/probes/httpProbe')]",
		"lbHttpsProbeId": "[concat(variables('nodeLbId'),'/probes/httpsProbe')]",
		"osType": {
			"publisher": "RedHat",
			"offer": "RHEL",
			"sku": "7.3",
			"version": "latest"
		},
		"sshPrivateKey": {
			"reference": {
				"keyvault": {
					"id": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('keyVaultResourceGroup'), '/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
				},
				"secretName": "[parameters('keyVaultSecret')]"
			}
		},
		"imageReference": "[variables('osType')]",
		"sshKeyPath": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
		"nodePrepScriptUrl": "[concat(parameters('_artifactsLocation'), '/nodePrep.sh')]",
		"masterPrepScriptUrl": "[concat(parameters('_artifactsLocation'), '/masterPrep.sh')]",
		"nodePrepScriptFileName": "nodePrep.sh",
		"masterPrepScriptFileName": "masterPrep.sh",
		"openshiftDeploymentTemplateUrl": "[concat(parameters('_artifactsLocation'), '/openshiftdeploy.json')]",
		"vmSizesMap": {
			"Standard_A4": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_A5": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_A6": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_A7": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_A8": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_A9": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_A10": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_A11": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D1": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D4": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D11": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D12": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D13": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D14": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D1_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D2_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D3_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D4_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D5_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D11_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D12_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D13_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_D14_v2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_G1": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_G2": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_G3": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_G4": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_G5": {
				"storageAccountType": "Standard_LRS"
			},
			"Standard_DS1": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS3": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS4": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS11": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS12": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS13": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS14": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS1_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS2_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS3_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS4_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS5_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS11_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS12_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS13_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS14_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_DS15_v2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_GS1": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_GS2": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_GS3": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_GS4": {
				"storageAccountType": "Premium_LRS"
			},
			"Standard_GS5": {
				"storageAccountType": "Premium_LRS"
			}
		}
	},
	"resources": [

		{
			"apiVersion": "[variables('apiVersionNetwork')]",
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[concat(variables('openshiftMasterHostname'), '-nsg')]",
			"location": "[variables('location')]",
			"properties": {
				"securityRules": [{
					"name": "allowSSHin_all",
					"properties": {
						"description": "Allow SSH in from all locations",
						"protocol": "Tcp",
						"sourcePortRange": "*",
						"destinationPortRange": "22",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 100,
						"direction": "Inbound"
					}
				}, {
					"name": "allowHTTPS_all",
					"properties": {
						"description": "Allow HTTPS connections from all locations",
						"protocol": "Tcp",
						"sourcePortRange": "*",
						"destinationPortRange": "443",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 200,
						"direction": "Inbound"
					}
				}, {
					"name": "allowOpenShiftConsolIn_all",
					"properties": {
						"description": "Allow HTTPS connections from all locations",
						"protocol": "Tcp",
						"sourcePortRange": "*",
						"destinationPortRange": "8443",
						"sourceAddressPrefix": "*",
						"destinationAddressPrefix": "*",
						"access": "Allow",
						"priority": 300,
						"direction": "Inbound"
					}
				}]
			}
		}, {
			"type": "Microsoft.Network/virtualNetworks",
			"name": "[variables('virtualNetworkName')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionNetwork')]",
			"tags": {
				"displayName": "VirtualNetwork"
			},
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('addressPrefix')]"
					]
				},
				"subnets": [{
					"name": "[variables('masterSubnetName')]",
					"properties": {
						"addressPrefix": "[variables('masterSubnetPrefix')]"
					}
				}, {
					"name": "[variables('nodeSubnetName')]",
					"properties": {
						"addressPrefix": "[variables('nodeSubnetPrefix')]"
					}
				}]
			}
		}, {
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('newStorageAccountMaster')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionStorage')]",
			"tags": {
				"displayName": "StorageAccounts"
			},
			"properties": {
				"accountType": "[variables('vmSizesMap')[parameters('masterVmSize')].storageAccountType]"
			}
		}, {
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('newStorageAccountNode')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionStorage')]",
			"tags": {
				"displayName": "StorageAccounts"
			},
			"properties": {
				"accountType": "[variables('vmSizesMap')[parameters('nodeVmSize')].storageAccountType]"
			}
		}, {
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[parameters('nodeLbPublicIpDnsLabel')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionNetwork')]",
			"tags": {
				"displayName": "OpenShiftNodeLBPublicIP"
			},
			"properties": {
				"publicIPAllocationMethod": "Static",
				"dnsSettings": {
					"domainNameLabel": "[parameters('nodeLbPublicIpDnsLabel')]"
				}
			}
		}, {
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[parameters('openshiftMasterPublicIpDnsLabel')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionNetwork')]",
			"tags": {
				"displayName": "OpenShiftMasterPublicIP"
			},
			"properties": {
				"publicIPAllocationMethod": "Static",
				"dnsSettings": {
					"domainNameLabel": "[parameters('openshiftMasterPublicIpDnsLabel')]"
				}
			}
		}, {
			"type": "Microsoft.Compute/availabilitySets",
			"name": "masteravailabilityset",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionCompute')]",
			"properties": {}
		}, {
			"type": "Microsoft.Compute/availabilitySets",
			"name": "nodeavailabilityset",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionCompute')]",
			"properties": {}
		}, {
			"type": "Microsoft.Network/loadBalancers",
			"name": "[variables('nodeLoadBalancerName')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionNetwork')]",
			"tags": {
				"displayName": "OpenShiftNodeLB"
			},
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', parameters('nodeLbPublicIpDnsLabel'))]"
			],
			"properties": {
				"frontendIPConfigurations": [{
					"name": "LoadBalancerFrontEnd",
					"properties": {
						"publicIPAddress": {
							"id": "[variables('nodePublicIpAddressId')]"
						}
					}
				}],
				"backendAddressPools": [{
					"name": "loadBalancerBackEnd"
				}],
				"loadBalancingRules": [{
					"name": "OpenShiftRouterHTTP",
					"properties": {
						"frontendIPConfiguration": {
							"id": "[variables('lbFrontEndConfigId')]"
						},
						"backendAddressPool": {
							"id": "[variables('lbBackendPoolId')]"
						},
						"protocol": "Tcp",
						"frontendPort": 80,
						"backendPort": 80,
						"probe": {
							"id": "[variables('lbHttpProbeId')]"
						}
					}
				}, {
					"name": "OpenShiftRouterHTTPS",
					"properties": {
						"frontendIPConfiguration": {
							"id": "[variables('lbFrontEndConfigId')]"
						},
						"backendAddressPool": {
							"id": "[variables('lbBackendPoolId')]"
						},
						"protocol": "Tcp",
						"frontendPort": 443,
						"backendPort": 443,
						"probe": {
							"id": "[variables('lbHttpsProbeId')]"
						}
					}
				}],
				"probes": [{
					"name": "httpProbe",
					"properties": {
						"protocol": "Tcp",
						"port": 80,
						"intervalInSeconds": 5,
						"numberOfProbes": 2
					}
				}, {
					"name": "httpsProbe",
					"properties": {
						"protocol": "Tcp",
						"port": 443,
						"intervalInSeconds": 5,
						"numberOfProbes": 2
					}
				}]
			}
		}, {
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('openshiftMasterHostname'), 'nic')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionNetwork')]",
			"tags": {
				"displayName": "OpenShiftMasterNetworkInterface"
			},
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
				"[concat('Microsoft.Network/publicIPAddresses/', parameters('openshiftMasterPublicIpDnsLabel'))]"
			],
			"properties": {
				"ipConfigurations": [{
					"name": "[concat(variables('openshiftMasterHostname'), 'ipconfig')]",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"publicIPAddress": {
							"id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('openshiftMasterPublicIpDnsLabel'))]"
						},
						"subnet": {
							"id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('masterSubnetName'))]"
						}
					}
				}],
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('openshiftMasterHostname'), '-nsg'))]"
				}
			}
		}, {
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('openshiftInfraHostname'), 'nic')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionNetwork')]",
			"tags": {
				"displayName": "OpenShiftInfraNetworkInterface"
			},
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
				"[concat('Microsoft.Network/loadBalancers/', variables('nodeLoadBalancerName'))]"
			],
			"properties": {
				"ipConfigurations": [{
					"name": "[concat(variables('openshiftInfraHostname'), 'ipconfig')]",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"subnet": {
							"id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('nodeSubnetName'))]"
						},
						"loadBalancerBackendAddressPools": [{
							"id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('nodeLoadBalancerName'), '/backendAddressPools/loadBalancerBackEnd')]"
						}]
					}
				}]
			}
		}, {
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('openshiftNodeHostname'), copyIndex(), 'nic')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionNetwork')]",
			"tags": {
				"displayName": "OpenShiftNodeNetworkInterfaces"
			},
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
			],
			"copy": {
				"name": "nodeNICLoop",
				"count": "[parameters('nodeInstanceCount')]"
			},
			"properties": {
				"ipConfigurations": [{
					"name": "[concat(variables('openshiftNodeHostname'), copyIndex(), 'ipconfig')]",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"subnet": {
							"id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('nodeSubnetName'))]"
						}
					}
				}]
			}
		}, {
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[variables('openshiftMasterHostname')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionCompute')]",
			"tags": {
				"displayName": "OpenShiftMasterVirtualMachine"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('newStorageAccountMaster'))]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('openshiftMasterHostname'), 'nic')]"
			],
			"properties": {
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', 'masteravailabilityset')]"
				},
				"hardwareProfile": {
					"vmSize": "[parameters('masterVmSize')]"
				},
				"osProfile": {
					"computerName": "[variables('openshiftMasterHostname')]",
					"adminUsername": "[parameters('adminUsername')]",
					"linuxConfiguration": {
						"disablePasswordAuthentication": true,
						"ssh": {
							"publicKeys": [{
								"path": "[variables('sshKeyPath')]",
								"keyData": "[parameters('sshPublicKey')]"
							}]
						}
					}
				},
				"storageProfile": {
					"imageReference": "[variables('imageReference')]",
					"osDisk": {
						"name": "[concat(variables('openshiftMasterHostname'), 'osdisk')]",
						"vhd": {
							"uri": "[concat('https://', variables('newStorageAccountMaster'), '.blob.core.windows.net/vhd/', variables('openshiftMasterHostname'), '.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [{
						"name": "[concat(variables('openshiftMasterHostname'), '-docker-pool')]",
						"diskSizeGB": "[parameters('dataDiskSize')]",
						"lun": 0,
						"vhd": {
							"uri": "[concat('https://', variables('newStorageAccountMaster'), '.blob.core.windows.net/vhd/', variables('openshiftMasterHostname'), '-docker-pool.vhd')]"
						},
						"createOption": "Empty"
					}]
				},
				"networkProfile": {
					"networkInterfaces": [{
						"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('openshiftMasterHostname'), 'nic'))]"
					}]
				}
			}
		}, {
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[variables('openshiftInfraHostname')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionCompute')]",
			"tags": {
				"displayName": "OpenShiftInfraVirtualMachine"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('newStorageAccountMaster'))]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('openshiftInfraHostname'), 'nic')]"
			],
			"properties": {
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', 'nodeavailabilityset')]"
				},
				"hardwareProfile": {
					"vmSize": "[parameters('masterVmSize')]"
				},
				"osProfile": {
					"computerName": "[variables('openshiftInfraHostname')]",
					"adminUsername": "[parameters('adminUsername')]",
					"linuxConfiguration": {
						"disablePasswordAuthentication": true,
						"ssh": {
							"publicKeys": [{
								"path": "[variables('sshKeyPath')]",
								"keyData": "[parameters('sshPublicKey')]"
							}]
						}
					}
				},
				"storageProfile": {
					"imageReference": "[variables('imageReference')]",
					"osDisk": {
						"name": "[concat(variables('openshiftInfraHostname'), 'osdisk')]",
						"vhd": {
							"uri": "[concat('https://', variables('newStorageAccountMaster'), '.blob.core.windows.net/vhd/', variables('openshiftInfraHostname'), '.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [{
						"name": "[concat(variables('openshiftInfraHostname'), '-docker-pool')]",
						"diskSizeGB": "[parameters('dataDiskSize')]",
						"lun": 0,
						"vhd": {
							"uri": "[concat('https://', variables('newStorageAccountMaster'), '.blob.core.windows.net/vhd/', variables('openshiftInfraHostname'), '-docker-pool.vhd')]"
						},
						"createOption": "Empty"
					}]
				},
				"networkProfile": {
					"networkInterfaces": [{
						"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('openshiftInfraHostname'), 'nic'))]"
					}]
				}
			}
		}, {
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(variables('openshiftNodeHostname'), '-', copyIndex())]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionCompute')]",
			"tags": {
				"displayName": "OpenShiftNodes"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('newStorageAccountNode'))]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('openshiftNodeHostname'), copyIndex(), 'nic')]"
			],
			"copy": {
				"name": "nodeLoop",
				"count": "[parameters('nodeInstanceCount')]"
			},
			"properties": {
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', 'nodeavailabilityset')]"
				},
				"hardwareProfile": {
					"vmSize": "[parameters('nodeVmSize')]"
				},
				"osProfile": {
					"computerName": "[concat(variables('openshiftNodeHostname'), '-', copyIndex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"linuxConfiguration": {
						"disablePasswordAuthentication": true,
						"ssh": {
							"publicKeys": [{
								"path": "[variables('sshKeyPath')]",
								"keyData": "[parameters('sshPublicKey')]"
							}]
						}
					}
				},
				"storageProfile": {
					"imageReference": "[variables('imageReference')]",
					"osDisk": {
						"name": "[concat(variables('openshiftNodeHostname'), copyIndex(), 'osdisk')]",
						"vhd": {
							"uri": "[concat('https://', variables('newStorageAccountNode'), '.blob.core.windows.net/vhd/', variables('openshiftNodeHostname'), copyIndex(), '.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [{
						"name": "[concat(variables('openshiftNodeHostname'), copyIndex(), '-docker-pool')]",
						"diskSizeGB": "[parameters('dataDiskSize')]",
						"lun": 0,
						"vhd": {
							"uri": "[concat('https://', variables('newStorageAccountNode'), '.blob.core.windows.net/vhd/', variables('openshiftNodeHostname'), copyIndex(), '-docker-pool.vhd')]"
						},
						"createOption": "Empty"
					}]
				},
				"networkProfile": {
					"networkInterfaces": [{
						"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('openshiftNodeHostname'), copyIndex(), 'nic'))]"
					}]
				}
			}
		}, {
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('openshiftMasterHostname'), '/deployOpenShift')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionCompute')]",
			"tags": {
				"displayName": "PrepMaster"
			},
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('openshiftMasterHostname'))]"
			],
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "CustomScript",
				"typeHandlerVersion": "2.0",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"fileUris": [
						"[variables('masterPrepScriptUrl')]"
					]
				},
				"protectedSettings": {
					"commandToExecute": "[concat('bash ', variables('masterPrepScriptFileName'), ' ', parameters('cloudAccessUsername'), ' ', parameters('cloudAccessPassword'), ' ', parameters('cloudAccessPoolId'))]"
				}
			}
		}, {
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('openshiftInfraHostname'), '/prepNodes')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionCompute')]",
			"tags": {
				"displayName": "PrepInfra"
			},
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('openshiftInfraHostname'))]"
			],
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "CustomScript",
				"typeHandlerVersion": "2.0",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"fileUris": [
						"[variables('nodePrepScriptUrl')]"
					]
				},
				"protectedSettings": {
					"commandToExecute": "[concat('bash ', variables('nodePrepScriptFileName'), ' ', parameters('cloudAccessUsername'), ' ', parameters('cloudAccessPassword'), ' ', parameters('cloudAccessPoolId'))]"
				}
			}
		}, {
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('openshiftNodeHostname'), '-', copyIndex(), '/prepNodes')]",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionCompute')]",
			"tags": {
				"displayName": "PrepNodes"
			},
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('openshiftNodeHostname'), '-', copyIndex())]"
			],
			"copy": {
				"name": "nodeScriptLoop",
				"count": "[parameters('nodeInstanceCount')]"
			},
			"properties": {
				"publisher": "Microsoft.Azure.Extensions",
				"type": "CustomScript",
				"typeHandlerVersion": "2.0",
				"autoUpgradeMinorVersion": true,
				"settings": {
					"fileUris": [
						"[variables('nodePrepScriptUrl')]"
					]
				},
				"protectedSettings": {
					"commandToExecute": "[concat('bash ', variables('nodePrepScriptFileName'), ' ', parameters('cloudAccessUsername'), ' ', parameters('cloudAccessPassword'), ' ', parameters('cloudAccessPoolId'))]"
				}
			}
		}, {
			"name": "OpenShiftDeployment",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[variables('apiVersionLinkTemplate')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('openshiftMasterHostname'), '/extensions/deployOpenShift')]",
				"[concat('Microsoft.Compute/virtualMachines/', variables('openshiftInfraHostname'), '/extensions/prepNodes')]",
				"nodeScriptLoop"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('openshiftDeploymentTemplateUrl')]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"_artifactsLocation": {
						"value": "[parameters('_artifactsLocation')]"
					},
					"openshiftMasterHostname": {
						"value": "[variables('openshiftMasterHostname')]"
					},
					"openshiftMasterPublicIpFqdn": {
						"value": "[reference(parameters('openshiftMasterPublicIpDnsLabel')).dnsSettings.fqdn]"
					},
					"openshiftMasterPublicIpAddress": {
						"value": "[reference(parameters('openshiftMasterPublicIpDnsLabel')).ipAddress]"
					},
					"openshiftInfraHostname": {
						"value": "[variables('openshiftInfraHostname')]"
					},
					"openshiftNodeHostname": {
						"value": "[variables('openshiftNodeHostname')]"
					},
					"nodeInstanceCount": {
						"value": "[parameters('nodeInstanceCount')]"
					},
					"adminUsername": {
						"value": "[parameters('adminUsername')]"
					},
					"openshiftPassword": {
						"value": "[parameters('openshiftPassword')]"
					},
					"xipioDomain": {
						"value": "[concat(reference(parameters('nodeLbPublicIpDnsLabel')).ipAddress, '.xip.io')]"
					},
					"customDomain": {
						"value": "[parameters('defaultSubDomain')]"
					},
					"subDomainChosen": {
						"value": "[concat(parameters('defaultSubDomainType'), 'Domain')]"
					},
					"sshPrivateKey": {
						"reference": {
							"keyvault": {
								"id": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('keyVaultResourceGroup'), '/providers/Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
							},
							"secretName": "[parameters('keyVaultSecret')]"
						}
					}
				}
			}
		}
	],
	"outputs": {
		"openshiftConsoleUrl": {
			"type": "string",
			"value": "[concat('https://', reference(parameters('openshiftMasterPublicIpDnsLabel')).dnsSettings.fqdn, ':8443/console')]"
		},
		"openshiftMasterSsh": {
			"type": "string",
			"value": "[concat('ssh ', parameters('adminUsername'), '@', reference(parameters('openshiftMasterPublicIpDnsLabel')).dnsSettings.fqdn)]"
		},
		"openshiftNodeLoadBalancerFQDN": {
			"type": "string",
			"value": "[reference(parameters('nodeLbPublicIpDnsLabel')).dnsSettings.fqdn]"
		}
	}
}
